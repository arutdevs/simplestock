// =============================================================================
// Mixins - Helper functions สำหรับ SCSS
// =============================================================================

// Flexbox center mixin
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

// Flexbox between mixin
@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

// Truncate text with ellipsis
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Multiple line truncate
@mixin line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Responsive breakpoint mixin
@mixin breakpoint($size) {
  @if $size == xs {
    @media (min-width: $breakpoint-xs) { @content; }
  } @else if $size == sm {
    @media (min-width: $breakpoint-sm) { @content; }
  } @else if $size == md {
    @media (min-width: $breakpoint-md) { @content; }
  } @else if $size == lg {
    @media (min-width: $breakpoint-lg) { @content; }
  } @else if $size == xl {
    @media (min-width: $breakpoint-xl) { @content; }
  } @else if $size == xxl {
    @media (min-width: $breakpoint-xxl) { @content; }
  }
}

// Box shadow mixin
@mixin box-shadow($level: 1) {
  @if $level == 1 {
    box-shadow: $box-shadow-sm;
  } @else if $level == 2 {
    box-shadow: $box-shadow;
  } @else if $level == 3 {
    box-shadow: $box-shadow-lg;
  }
}

// Transition mixin
@mixin transition($properties...) {
  transition-property: $properties;
  transition-duration: 0.2s;
  transition-timing-function: ease-in-out;
}

// Clearfix mixin
@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// Absolute center mixin
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Aspect ratio mixin
@mixin aspect-ratio($width, $height) {
  position: relative;

  &::before {
    content: "";
    display: block;
    padding-top: ($height / $width) * 100%;
  }

  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

// Background cover mixin
@mixin bg-cover {
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

// Placeholder mixin
@mixin placeholder {
  &::-webkit-input-placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
}

// Hide scrollbar mixin
@mixin hide-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;

  &::-webkit-scrollbar {
    display: none;
  }
}

// Card style mixin
@mixin card-style {
  background-color: $bg-primary;
  border-radius: $border-radius-lg;
  padding: 1.5rem;
  box-shadow: $box-shadow-sm;
}

// Button reset mixin
@mixin button-reset {
  border: none;
  background: none;
  padding: 0;
  font: inherit;
  cursor: pointer;
  outline: inherit;
}

// Hover lift effect
@mixin hover-lift {
  transition: $transition-base;

  &:hover {
    transform: translateY(-2px);
    box-shadow: $box-shadow;
  }
}
